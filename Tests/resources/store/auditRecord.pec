define print as native method receiving Text value doing:
	Java: System.out.print(value);
	C#: System.Console.Write(value);
	Python2: print(objects=value,end="")
	Python3: print(objects=value,end="")
	JavaScript: process.stdout.write(value);

// ok to use Integer with MemStore
define dbId as Integer attribute 

define fetchLatestAuditMetadataId as native method receiving Any dbId returning Any doing:
	Java: return $store.fetchLatestAuditMetadataId(dbId);
	C#: return $store.FetchLatestAuditMetadataId(dbId);
	Python2: return $store.fetchLatestAuditMetadataId(dbId)
	Python3: return $store.fetchLatestAuditMetadataId(dbId)
	JavaScript: return $store.fetchLatestAuditMetadataId(dbId);

define fetchAllAuditMetadataIds as native method receiving Any dbId returning Any[] doing:
	Java: return $store.fetchAllAuditMetadataIds(dbId);
	C#: return $store.FetchAllAuditMetadataIds(dbId);
	Python2: return $store.fetchAllAuditMetadataIds(dbId)
	Python3: return $store.fetchAllAuditMetadataIds(dbId)
	JavaScript: return $store.fetchAllAuditMetadataIds(dbId);

define fetchAuditMetadata as native method receiving Any dbId returning Document doing:
	Java: return $store.fetchAuditMetadataAsDocument(dbId);
	C#: return $store.FetchAuditMetadataAsDocument(dbId);
	Python2: return $store.fetchAuditMetadataAsDocument(dbId)
	Python3: return $store.fetchAuditMetadataAsDocument(dbId)
	JavaScript: return $store.fetchAuditMetadataAsDocument(dbId);

define name as storable Text attribute with index

define Entity as storable category with attribute name

define main as method receiving Text<:> options doing:
	e1 = Entity with "John" as name
	store e1 with { "stuff": "some stuff" } as metadata
	id = fetchLatestAuditMetadataId with e1.dbId as dbId
	meta = fetchAuditMetadata with id as dbId
	print "/stuff:" + meta.stuff
	e2 = fetch one mutable Entity where name = "John" 
	e2.name = "Jim"
	store e2
	ids = fetchAllAuditMetadataIds with e2.dbId as dbId
	print "/count:" + ids.count